
arduArm_mc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000232  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001be  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000045  00800100  00800100  00000232  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000232  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000133  00000000  00000000  00000e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000f6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_18>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_19>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a5 34       	cpi	r26, 0x45	; 69
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  88:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_18>:
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	2f 93       	push	r18
  9c:	8f 93       	push	r24
  9e:	9f 93       	push	r25
  a0:	ef 93       	push	r30
  a2:	ff 93       	push	r31
  a4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  a8:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  ac:	88 71       	andi	r24, 0x18	; 24
  ae:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <UART_RxHead>
  b2:	ef 5f       	subi	r30, 0xFF	; 255
  b4:	ef 71       	andi	r30, 0x1F	; 31
  b6:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <UART_RxTail>
  ba:	e2 17       	cp	r30, r18
  bc:	39 f0       	breq	.+14     	; 0xcc <__vector_18+0x3c>
  be:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <UART_RxHead>
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	eb 5f       	subi	r30, 0xFB	; 251
  c6:	fe 4f       	sbci	r31, 0xFE	; 254
  c8:	90 83       	st	Z, r25
  ca:	01 c0       	rjmp	.+2      	; 0xce <__vector_18+0x3e>
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  d2:	ff 91       	pop	r31
  d4:	ef 91       	pop	r30
  d6:	9f 91       	pop	r25
  d8:	8f 91       	pop	r24
  da:	2f 91       	pop	r18
  dc:	0f 90       	pop	r0
  de:	0f be       	out	0x3f, r0	; 63
  e0:	0f 90       	pop	r0
  e2:	1f 90       	pop	r1
  e4:	18 95       	reti

000000e6 <__vector_19>:
  e6:	1f 92       	push	r1
  e8:	0f 92       	push	r0
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	0f 92       	push	r0
  ee:	11 24       	eor	r1, r1
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
  f4:	ef 93       	push	r30
  f6:	ff 93       	push	r31
  f8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <UART_TxHead>
  fc:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <UART_TxTail>
 100:	98 17       	cp	r25, r24
 102:	69 f0       	breq	.+26     	; 0x11e <__vector_19+0x38>
 104:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <UART_TxTail>
 108:	ef 5f       	subi	r30, 0xFF	; 255
 10a:	ef 71       	andi	r30, 0x1F	; 31
 10c:	e0 93 03 01 	sts	0x0103, r30	; 0x800103 <UART_TxTail>
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	eb 5d       	subi	r30, 0xDB	; 219
 114:	fe 4f       	sbci	r31, 0xFE	; 254
 116:	80 81       	ld	r24, Z
 118:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 11c:	05 c0       	rjmp	.+10     	; 0x128 <__vector_19+0x42>
 11e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 122:	8f 7d       	andi	r24, 0xDF	; 223
 124:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 128:	ff 91       	pop	r31
 12a:	ef 91       	pop	r30
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <uart_init>:
 13a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <UART_TxHead>
 13e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <UART_TxTail>
 142:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <UART_RxHead>
 146:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <UART_RxTail>
 14a:	97 ff       	sbrs	r25, 7
 14c:	04 c0       	rjmp	.+8      	; 0x156 <uart_init+0x1c>
 14e:	22 e0       	ldi	r18, 0x02	; 2
 150:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 154:	9f 77       	andi	r25, 0x7F	; 127
 156:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 15a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 15e:	88 e9       	ldi	r24, 0x98	; 152
 160:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 164:	86 e0       	ldi	r24, 0x06	; 6
 166:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 16a:	08 95       	ret

0000016c <uart_putc>:
 16c:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <UART_TxHead>
 170:	9f 5f       	subi	r25, 0xFF	; 255
 172:	9f 71       	andi	r25, 0x1F	; 31
 174:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <UART_TxTail>
 178:	92 17       	cp	r25, r18
 17a:	e1 f3       	breq	.-8      	; 0x174 <uart_putc+0x8>
 17c:	e9 2f       	mov	r30, r25
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	eb 5d       	subi	r30, 0xDB	; 219
 182:	fe 4f       	sbci	r31, 0xFE	; 254
 184:	80 83       	st	Z, r24
 186:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <UART_TxHead>
 18a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 18e:	80 62       	ori	r24, 0x20	; 32
 190:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 194:	08 95       	ret

00000196 <main>:
 196:	87 e6       	ldi	r24, 0x67	; 103
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	0e 94 9d 00 	call	0x13a	; 0x13a <uart_init>
 19e:	78 94       	sei
 1a0:	cf ef       	ldi	r28, 0xFF	; 255
 1a2:	8f e1       	ldi	r24, 0x1F	; 31
 1a4:	9e e4       	ldi	r25, 0x4E	; 78
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x10>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x16>
 1ac:	00 00       	nop
 1ae:	14 b8       	out	0x04, r1	; 4
 1b0:	c5 b9       	out	0x05, r28	; 5
 1b2:	83 b1       	in	r24, 0x03	; 3
 1b4:	0e 94 b6 00 	call	0x16c	; 0x16c <uart_putc>
 1b8:	f4 cf       	rjmp	.-24     	; 0x1a2 <main+0xc>

000001ba <_exit>:
 1ba:	f8 94       	cli

000001bc <__stop_program>:
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <__stop_program>
